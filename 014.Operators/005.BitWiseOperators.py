# Binary - 000110100101
# 0 - bit 1 - bit

# 0 -- 0000
# 1 --  0001
# 2 --  0010
# 3 -- 0011
# 4 -- 0100
# 5 -  0101
# 6 -- 0110
# 7 -- 0111
# 8 -  1000
# 9 -- 1001

# 23 -- 2 (divide)
#  11 - 1
#  5 -1
#  2 - 1
# 1 - 0


# 2^5 2^4  2^3  2^2  2^1  2^0
# 32  16    8    4    2    1
# 14
# 8+4+2
# 1110

# 40 
# 32+8
# 101000


# Bitwise AND  - 
a =12   # 1100
b = 10  # 1010
# 0 & 0 = 0  , 1 & 0 = 0  , 0 & 1 = 0 , 1 & 1 = 1
# 1000 == 8 
print(a & b)

"""
15 - 1111
13 - 1101

                1 1 1 1 
                1 1 0 1
Result(AND) =>  1 1 0 1 - 13 

32 16 8 4 2 1 
17 - 16+1 ==      10001
25 - 16 + 8 + 1 = 11001
                  10001 --  17

"""
print(15 & 13)

print(17 & 25)


# BitWise OR -- 0 | 0 = 0 , 1 | 0 = 1 , 0 | 1 = 1 , 1 | 1 = 1

"""
32 16 8 4 2 1 
17 - 16+1 ==      10001
25 - 16 + 8 + 1 = 11001
                  11001     - 25 

        1 0 0 0  - 8 
        1 1 0 1  - 13
OR =    1 1 0 1 - 13 

"""
print(13 | 8)
print(25 | 17)